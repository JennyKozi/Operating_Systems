Λειτουργικά Συστήματα 2023 - Τμήμα Αρτίων - Προγραμματιστική Άσκηση 2

Ευγενία Κοζή
Α.Μ: 1115202000082

Με το Makefile το πρόγραμμα μεταγλωττίζεται με χρήση separate compilation και linker (δηλαδή ξεχωριστή μεταγλώττιση κάθε αρχείου κώδικα .c και δημιουργία .o αρχείων).

Έχει γίνει έλεγχος με valgrind και το πρόγραμμα δεν έχει memory leaks.

Γίνονται έλεγχοι ότι έχουμε δώσει σωστά arguments και flags στην εντολή εκτέλεσης του προγράμματος.

Γίνεται πάντα έλεγχος αν δεσμεύτηκε η μνήμη από τη malloc και αν αποτύχει το πρόγραμμα τερματίζει.

Γίνεται πάντα έλεγχος για το αν άνοιξε σωστά το αρχείο με την open.
Πάντα κλείνουμε το αρχείο με close.

Όλοι οι πίνακες δημιουργούνται και επεκτείνονται δυναμικά όσο τρέχει το πρόγραμμα.

Δε γίνεται χρήση στατικών πινάκων/δομών που δεσμεύονται στη διάρκεια της συμβολομετάφρασης του προγράμματος.

Για την ταξινόμηση των εγγραφών από τους sorters χρησιμοποιούνται οι αλγόριθμοι bubble sort και selection sort.
Τα εκτελέσιμά τους είναι τα bubblesort και selectionsort (αυτά είναι τα ορίσματα που δίνουμε στη γραμμή εντολών με flag e1 και e2).

Ενδεικτικές εντολές run:
./mysort -i voters50.bin -k 4 -e1 bubblesort -e2 selectionsort
./mysort -i voters50000.bin -k 7 -e1 bubblesort -e2 selectionsort
./mysort -i voters100000.bin -k 20 -e1 bubblesort -e2 selectionsort

*header.h: Αρχείο επικεφαλίδας με ορισμούς που χρειάζονται όλα τα .c αρχεία κώδικα.

*mysort.c:

-Root: ρίζα

Δημιουργεί πίνακες που θα έχουν σημαντικές πληροφορίες όπως το pid των splitters, το από ποιο σημείο του αρχείου θα αναλάβει ο κάθε splitter,
το πόσα records θα αναλάβει και τα pipes επικοινωνίας μεταξύ splitters και root.

Με fork ο root δημιουργεί k splitters.

Ορίζει τον τρόπο που θα αντιμετωπίζει τα σήματα USR1 και USR2 που θα λαμβάνει από τους splitters και τους sorters.


Splitters: ενδιάμεσοι κόμβοι


Sorters: κόμβοι-φύλλα


*bubblesort.c, selectionsort.c: κώδικας με τους αντίστοιχους αλγορίθμους bubblesort και selectionsort

Παίρνουν ορίσματα από τη γραμμή εντολών:
-argv[1]: αρχείο δεδομένων
-argv[2]: δείκτης στο αρχείο (από ποια εγγραφή θα ξεκινήσει να διαβάζει)
-argv[3]: αριθμός εγγραφών που θα διαβαστούν και θα ταξινομηθούν
-argv[4]: pipe στο οποίο θα γράψουν τα αποτελέσματα (τον ταξινομημένο πίνακα) για να τα στείλει στον γονέα (splitter)
-argv[5]: pid του root

Ανοίγουν το αρχείο και πηγαίνουν τον δείκτη του εκεί που πρέπει.
Διαβάζουν όσες εγγραφές πρέπει και τις ταξινομούν με βάση τον αλγόριθμο.
Χρονομετρούν τον χρόνο που έκαναν (real time and CPU time με βάση τον κώδικα που δόθηκε στην εκφώνηση της εργασίας).
Γράφουν το αποτέλεσμα στο pipe και στο τέλος τον χρόνο που έκαναν.
Στέλνουν σήμα USR2 στο root όταν τελειώσουν.

*merge.c: Αλγόριθμος συγχώνευσης δύο ταξινομημένων πινάκων
Χρησιμοποιείται από τους splitters για συγχόνευση των αποτελεσμάτων που επιστρέφουν οι sorters.
Έπειτα χρησιμοποιείται από το root για συγχόνευση των αποτελεσμάτων που επιστρέφουν οι splitters.

